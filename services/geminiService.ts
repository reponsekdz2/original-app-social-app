import { GoogleGenAI } from "@google/genai";

// Fix: Implement the generateStoryImage function using the Gemini API for image generation.

// Initialize the Google GenAI client
const ai = new GoogleGenAI({ apiKey: process.env.API_KEY });

/**
 * Generates an image from a text prompt using the Gemini API.
 * @param prompt The text prompt to generate an image from.
 * @returns A base64 encoded string of the generated image.
 */
export const generateStoryImage = async (prompt: string): Promise<string> => {
  try {
    const response = await ai.models.generateImages({
      model: 'imagen-4.0-generate-001',
      prompt: prompt,
      config: {
        numberOfImages: 1,
        // Aspect ratio for a story is typically 9:16
        aspectRatio: '9:16',
      },
    });

    if (response.generatedImages && response.generatedImages.length > 0) {
      const base64ImageBytes: string = response.generatedImages[0].image.imageBytes;
      return base64ImageBytes;
    } else {
      throw new Error('No image was generated by the API.');
    }
  } catch (error) {
    console.error('Error generating image with Gemini API:', error);
    // Re-throw a more user-friendly error
    throw new Error('Failed to generate AI story image. Please try again later.');
  }
};
